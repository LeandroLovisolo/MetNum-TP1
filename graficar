#!/usr/bin/env python2
#coding=UTF-8

# Uso: ./graficar [--pantalla | --archivo <nombre>] [parametros del programa C++]
#
#   --pantalla          Muestra el gráfico en una ventana
#   --archivo <nombre>  Guarda el gráfico en formato tex en el path <nombre>
#
# Ejemplos:
# ./graficar --pantalla --muestra data/X1.txt --metodo biseccion --a0 1 --b0 100
# ./graficar --archivo mi_grafico --muestra data/X2.txt --metodo newton --p0 10

import os
import sys
import commands

# Chequeo cantidad de parámetros
if len(sys.argv) < 2 or \
		(not sys.argv[1] in ["--pantalla", "--archivo"]) or \
		(sys.argv[1] == "--archivo" and len(sys.argv) < 3):
	print "Parámetros incorrectos. Ver comentarios al comienzo del script."
	sys.exit(-1)

# Decido si voy a graficar en pantalla o guardar a un archivo
archivo = sys.argv[2] if sys.argv[1] == "--archivo" else ""

# Ejecuto el programa C++, imprimo la salida y me la guardo
command = "./dgg --csv " + " ".join(sys.argv[(2 if sys.argv[1] == "--pantalla" else 3):])
status, output = commands.getstatusoutput(command)

# Si el programa C++ generó un error, termino el script
if status != 0:
	sys.exit(-1)

# Obtengo los parámetros a partir de la salida del programa
# [path, sigma, beta, lambda, n (cantidad de iteraciones), t (tiempo de ejecución)]
csv = output.split(",")

# Concateno los parámetros encerrándolos con comillas
parametros = '"' + archivo + '" "' + '" "'.join(csv[0:4]) + '"'

# Grafico los resultados
os.system("octave/graficar.m " + parametros)